<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="89.226852mm"
   height="68.546318mm"
   viewBox="0 0 89.226852 68.546318"
   version="1.1"
   id="svg5"
   xml:space="preserve"
   inkscape:version="1.3 (0e150ed6c4, 2023-07-21)"
   sodipodi:docname="logo.svg"
   inkscape:export-filename="logo_supersatrnc.png"
   inkscape:export-xdpi="170"
   inkscape:export-ydpi="170"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview7"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="0.70710678"
     inkscape:cx="277.89297"
     inkscape:cy="336.58283"
     inkscape:window-width="1440"
     inkscape:window-height="830"
     inkscape:window-x="-6"
     inkscape:window-y="-6"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" /><defs
     id="defs2" /><g
     inkscape:label="Ebene 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-64.347734,-43.322699)"><path
       style="fill:none;fill-opacity:0.589474;stroke:#0066ff;stroke-width:0.49508;stroke-dasharray:none;stroke-opacity:0.45"
       d="m 125.552,55.865289 c 0,0 -24.41562,-10.232883 -32.176439,-8.937903 -6.84029,1.141377 8.759139,7.329077 8.759139,7.329077"
       id="path3505-6"
       sodipodi:nodetypes="csc" /><path
       style="fill:none;fill-opacity:0.589474;stroke:#0066ff;stroke-width:0.285291;stroke-dasharray:none;stroke-opacity:0.45"
       d="m 121.62238,55.742012 c 0,0 -14.06949,-5.896695 -18.54166,-5.150462 -3.941714,0.657718 5.04745,4.223377 5.04745,4.223377"
       id="path3505-6-5"
       sodipodi:nodetypes="csc" /><path
       style="fill:none;fill-opacity:0.589474;stroke:#0066ff;stroke-width:0.693347;stroke-dasharray:none;stroke-opacity:0.45"
       d="m 129.74231,56.347647 c 0,0 -34.1934,-14.330866 -45.06221,-12.517283 -9.579634,1.598469 12.266937,10.26417 12.266937,10.26417"
       id="path3505"
       sodipodi:nodetypes="csc" /><path
       style="fill:none;stroke:#aa2000;stroke-width:1.39983;stroke-opacity:1"
       d="m 64.972358,110.45976 c 0,0 36.435972,4.02409 45.823842,-46.219803 6.87842,-36.813315 19.37326,47.526483 19.37326,47.526483"
       id="path236"
       sodipodi:nodetypes="csc" /><circle
       style="fill:#b22222;fill-opacity:1;stroke:none;stroke-width:2.05429"
       id="path1478"
       cx="115.45895"
       cy="54.362671"
       r="4.2774968" /><path
       style="fill:none;fill-opacity:0.589474;stroke:#0066ff;stroke-width:0.693347;stroke-dasharray:none;stroke-opacity:0.45"
       d="m 96.948882,54.079351 c 0,0 45.860808,19.49581 48.504468,14.895565 2.47125,-4.300245 -15.72776,-12.636628 -15.72776,-12.636628"
       id="path3669"
       sodipodi:nodetypes="csc" /><path
       style="fill:none;fill-opacity:0.589474;stroke:#0066ff;stroke-width:0.49508;stroke-dasharray:none;stroke-opacity:0.45"
       d="m 102.13602,54.245623 c 0,0 32.74668,13.920884 34.63437,10.636103 1.76458,-3.070569 -11.23033,-9.023122 -11.23033,-9.023122"
       id="path3669-2"
       sodipodi:nodetypes="csc" /><path
       style="fill:none;fill-opacity:0.589474;stroke:#0066ff;stroke-width:0.285291;stroke-dasharray:none;stroke-opacity:0.45"
       d="m 108.12893,54.808679 c 0,0 18.87026,8.021904 19.95804,6.129051 1.01684,-1.769413 -6.47147,-5.199569 -6.47147,-5.199569"
       id="path3669-2-5"
       sodipodi:nodetypes="csc" /><path
       style="font-size:10.5358px;font-family:'Mochiy Pop One';-inkscape-font-specification:'Mochiy Pop One';fill:#bebdbd;stroke:#1573ff;stroke-width:0.494645"
       d="m 68.723175,84.126662 q -0.885007,0 -1.643585,-0.263395 -0.758578,-0.263395 -1.369654,-0.695363 -0.600541,-0.442503 -1.05358,-0.948222 l 1.05358,-1.675192 q 0.136965,0.358217 0.453039,0.684827 0.32661,0.32661 0.758578,0.579469 0.431968,0.252859 0.906079,0.400361 0.484647,0.147501 0.948222,0.147501 0.695363,0 1.106259,-0.221252 0.410896,-0.231788 0.410896,-0.611076 0,-0.295003 -0.189644,-0.484647 -0.179109,-0.20018 -0.421432,-0.316074 -0.231788,-0.12643 -0.400361,-0.221252 -0.126429,-0.06321 -0.463575,-0.189644 -0.32661,-0.136966 -0.737506,-0.295003 -0.410896,-0.158037 -0.779649,-0.295002 -0.368753,-0.147501 -0.579469,-0.242324 -1.569834,-0.705898 -1.569834,-2.18091 0,-0.474111 0.179108,-0.927151 0.189645,-0.463575 0.568933,-0.842864 0.379289,-0.379288 0.969294,-0.60054 0.590005,-0.221252 1.411797,-0.221252 0.895543,0 1.590906,0.20018 0.695363,0.189645 1.222153,0.484647 0.537326,0.295002 0.916614,0.621612 l -0.969293,1.622513 q -1.169474,-1.158938 -2.644486,-1.158938 -0.621612,0 -0.948222,0.136966 -0.316074,0.126429 -0.431968,0.295002 -0.105358,0.158037 -0.105358,0.263395 0,0.179109 0.12643,0.358217 0.136965,0.179109 0.60054,0.379289 0.189645,0.08429 0.505719,0.210716 0.32661,0.115894 0.716434,0.263395 0.400361,0.147501 0.779649,0.316074 0.389825,0.158037 0.705899,0.32661 0.379289,0.210716 0.779649,0.516254 0.400361,0.305538 0.674291,0.758578 0.284467,0.442503 0.284467,1.085187 0,0.389825 -0.147501,0.863936 -0.147501,0.463575 -0.516254,0.895543 -0.368753,0.431968 -1.021973,0.705898 -0.65322,0.273931 -1.675192,0.273931 z m 6.65862,0.02107 q -0.674291,0 -1.116794,-0.242324 -0.431968,-0.231787 -0.695363,-0.642683 -0.252859,-0.410897 -0.379289,-0.916615 -0.115894,-0.516254 -0.158037,-1.064116 -0.03161,-0.558397 -0.03161,-1.074651 0,-0.590005 0.03161,-1.201082 0.04214,-0.611076 0.08429,-1.338046 l 1.928052,-0.115894 q -0.03161,0.221252 -0.09482,0.663755 -0.06321,0.442504 -0.115894,1.011437 -0.05268,0.568933 -0.05268,1.190546 0,1.021972 0.179108,1.517155 0.179109,0.484647 0.537326,0.484647 0.716435,0 1.05358,-1.043045 0.337146,-1.043044 0.337146,-3.297705 v -0.484647 l 0.895543,-0.02107 1.085187,-0.02107 q -0.147501,0.990365 -0.221252,1.822693 -0.07375,0.832329 -0.09482,1.401262 -0.02107,0.558397 -0.02107,0.748042 0,0.484646 0.08429,0.695362 0.08429,0.200181 0.295002,0.200181 0.105358,0 0.231788,-0.04214 0.12643,-0.04214 0.295002,-0.147501 l -0.07375,1.812158 q -0.400361,0.06321 -0.695363,0.06321 -0.505718,0 -0.832328,-0.189645 -0.316074,-0.189644 -0.505719,-0.505718 -0.326609,0.347681 -0.811256,0.537326 -0.474111,0.20018 -1.137867,0.20018 z m 5.004497,2.128231 q -0.07375,-0.842864 -0.105358,-1.696263 -0.03161,-0.8534 -0.03161,-1.970195 0,-1.359118 0.04214,-2.707701 0.04214,-1.348582 0.12643,-2.465377 l 1.812157,0.05268 q -0.03161,0.242324 -0.05268,0.516254 0.379289,-0.252859 0.811257,-0.368753 0.442504,-0.115893 0.895543,-0.115893 0.579469,0 1.127331,0.189644 0.547861,0.179109 0.990365,0.579469 0.442503,0.389825 0.695363,1.011437 0.263395,0.621612 0.263395,1.496083 0,0.863936 -0.263395,1.50662 -0.263395,0.642684 -0.705899,1.05358 -0.442504,0.421432 -0.990365,0.621612 -0.547862,0.210716 -1.127331,0.210716 -1.064116,0 -1.875372,-0.632148 0.02107,0.674291 0.06321,1.295903 0.04214,0.632148 0.105358,1.285368 z m 3.213419,-7.006307 q -1.043044,0 -1.569834,1.021973 -0.03161,0.632148 -0.04214,1.285368 0.252859,0.337145 0.65322,0.590004 0.40036,0.242324 1.021972,0.242324 1.485548,0 1.485548,-1.696264 0,-0.453039 -0.168573,-0.737506 -0.168573,-0.284467 -0.421432,-0.431968 -0.252859,-0.158037 -0.516254,-0.210716 -0.263395,-0.06321 -0.442504,-0.06321 z m 7.311845,4.857004 q -1.011437,0 -1.78055,-0.40036 -0.758578,-0.389825 -1.190546,-1.095723 -0.421432,-0.705899 -0.421432,-1.633049 0,-0.558398 0.189645,-1.169474 0.189644,-0.621612 0.611076,-1.158938 0.421432,-0.537326 1.106259,-0.874472 0.695363,-0.337145 1.685728,-0.337145 0.716434,0 1.201081,0.158037 0.495183,0.158037 0.800721,0.410896 0.316074,0.252859 0.474111,0.537326 0.168573,0.284466 0.221252,0.547861 0.06321,0.25286 0.06321,0.421432 0,1.021973 -0.863936,1.58037 -0.8534,0.547862 -2.423234,0.547862 -0.358217,0 -0.684827,-0.03161 -0.316074,-0.03161 -0.590005,-0.07375 0.20018,0.52679 0.663756,0.779649 0.463575,0.242324 0.958757,0.242324 0.716435,0 1.264296,-0.25286 0.547862,-0.263395 1.032509,-0.80072 l 0.937686,1.348582 q -0.337146,0.273931 -0.758578,0.568933 -0.410896,0.295003 -1.011436,0.484647 -0.600541,0.20018 -1.485548,0.20018 z m 0.231787,-5.088791 q -0.621612,0 -1.095723,0.316074 -0.474111,0.316074 -0.695363,0.832328 0.263395,0.04214 0.516255,0.07375 0.263395,0.02107 0.516254,0.02107 0.231787,0 0.52679,-0.04214 0.305538,-0.04214 0.590005,-0.12643 0.295002,-0.08429 0.484646,-0.210716 0.189645,-0.136965 0.189645,-0.316074 0,-0.08429 -0.08429,-0.210716 -0.08429,-0.126429 -0.305538,-0.231787 Q 91.564772,79.03787 91.14334,79.03787 Z m 3.792885,5.06772 q 0.04214,-0.874472 0.06321,-1.748943 0.02107,-0.874472 0.02107,-1.727871 -0.01054,-0.77965 -0.03161,-1.538227 -0.01054,-0.769114 -0.05268,-1.485548 l 1.770014,-0.05268 q 0.01054,0.389825 0.03161,0.800721 0.337146,-0.421432 0.77965,-0.674291 0.453039,-0.263395 1.032508,-0.263395 0.221252,0 0.568933,0.06321 0.347682,0.06321 0.705899,0.242324 l -0.20018,1.78055 q -0.263395,-0.158037 -0.568934,-0.221252 -0.295002,-0.07375 -0.495182,-0.07375 -0.674291,0 -1.148402,0.611076 -0.463576,0.600541 -0.632148,1.675192 0,0.737506 -0.02107,1.411797 -0.01054,0.663756 -0.05268,1.201082 z m 8.418102,0.05268 q -0.71644,0 -1.32751,-0.168573 -0.61108,-0.168573 -1.10626,-0.431968 -0.49519,-0.263395 -0.88501,-0.558397 l 0.94822,-1.527691 q 0.44251,0.410896 0.8534,0.632148 0.4109,0.221251 0.8534,0.305538 0.45304,0.08429 0.97983,0.08429 0.45304,0 0.72697,-0.115894 0.27393,-0.126429 0.27393,-0.316074 0,-0.158037 -0.26339,-0.242323 -0.2634,-0.09482 -0.67429,-0.158037 -0.4109,-0.07375 -0.86394,-0.179109 -0.64268,-0.168572 -1.20108,-0.389824 -0.5584,-0.221252 -0.90608,-0.600541 -0.33715,-0.379289 -0.33715,-1.011437 0,-0.505718 0.24233,-0.885007 0.24232,-0.389824 0.64268,-0.642684 0.4109,-0.263395 0.92715,-0.389824 0.51626,-0.12643 1.06412,-0.12643 0.94822,0 1.63305,0.231788 0.69536,0.221252 1.32751,0.590005 l -0.95876,1.45394 q -0.31607,-0.221252 -0.72697,-0.379289 -0.40036,-0.168573 -0.81126,-0.252859 -0.40036,-0.09482 -0.74804,-0.09482 -0.37929,0 -0.60054,0.115894 -0.21072,0.115893 -0.21072,0.326609 0,0.12643 0.2634,0.242324 0.27393,0.105358 1.03251,0.284466 0.45304,0.105358 0.95876,0.221252 0.50571,0.105358 0.94822,0.305538 0.45304,0.189645 0.72697,0.558398 0.28446,0.358217 0.28446,0.958758 0,1.011436 -0.81125,1.58037 -0.81126,0.579469 -2.25466,0.579469 z m 6.52166,-0.04214 q -0.79018,0 -1.43287,-0.410896 -0.64268,-0.40036 -1.02197,-1.085187 -0.36875,-0.695363 -0.36875,-1.548763 0,-0.800721 0.295,-1.443404 0.295,-0.65322 0.80072,-1.116795 0.51626,-0.463575 1.16947,-0.705899 0.65322,-0.252859 1.36966,-0.252859 0.60054,0 1.18001,0.168573 0.0421,-0.221252 0.0738,-0.442504 l 1.80162,0.305538 q -0.0738,0.200181 -0.1475,0.600541 -0.0738,0.40036 -0.12643,0.895543 -0.0421,0.495183 -0.0738,0.990365 -0.0316,0.495183 -0.0316,0.895543 0,0.32661 0.0422,0.642684 0.0527,0.305538 0.21071,0.505718 0.15804,0.189645 0.48465,0.189645 h 0.1475 l -0.2634,1.833229 q -0.69536,0 -1.1484,-0.242323 -0.45304,-0.231788 -0.72697,-0.632148 -0.45304,0.505718 -1.03251,0.674291 -0.57947,0.179108 -1.20108,0.179108 z m -1.09572,-2.83413 q 0.0527,0.505719 0.4109,0.811257 0.36875,0.295002 0.92715,0.295002 0.53732,0 0.89554,-0.284466 0.35822,-0.295003 0.59,-0.800721 -0.0105,-0.168573 -0.0105,-0.347682 0,-0.368753 0.0211,-0.758577 0.0211,-0.389825 0.0527,-0.769114 -0.44251,-0.168572 -0.92715,-0.168572 -0.56894,0 -1.02197,0.231787 -0.44251,0.221252 -0.69537,0.621612 -0.25286,0.400361 -0.25286,0.927151 0,0.06321 0,0.126429 0,0.06321 0.0105,0.115894 z m 9.29258,2.83413 q -0.63215,0 -1.00091,-0.27393 -0.36875,-0.263395 -0.53732,-0.737506 -0.16857,-0.474111 -0.22125,-1.085188 -0.0422,-0.611076 -0.0422,-1.285367 0,-0.695363 0.0527,-1.443405 -0.7059,0.09482 -1.35912,0.242323 l -0.32661,-1.65412 q 0.87448,-0.231788 1.86484,-0.337146 0.0737,-0.537326 0.15804,-1.12733 0.0843,-0.600541 0.18964,-1.264296 l 1.81216,0.158037 q -0.12643,0.547861 -0.22125,1.095723 -0.0948,0.537326 -0.16857,1.043044 0.59,0 1.10625,0.03161 0.52679,0.02107 0.9693,0.08429 l -0.21072,1.65412 q -0.36875,-0.04214 -0.76911,-0.05268 -0.38983,-0.02107 -0.79019,-0.02107 -0.24232,0 -0.48464,0.01054 -0.0632,0.769113 -0.0843,1.316975 -0.0105,0.547861 -0.0105,0.779649 0,0.579469 0.0632,0.832328 0.0738,0.252859 0.23179,0.252859 0.17911,0 0.40036,-0.115894 0.22125,-0.126429 0.43197,-0.337145 0.22125,-0.210716 0.36875,-0.45304 l 0.81126,1.696264 q -1.04305,0.990365 -2.23359,0.990365 z m 3.83503,-0.105358 q -0.0316,-0.716434 -0.0316,-1.58037 0,-0.832328 0.0316,-1.770014 0.0316,-0.937686 0.0948,-1.896444 0.0632,-0.969294 0.16857,-1.885908 -0.16857,0.04214 -0.32661,0.08429 -0.1475,0.03161 -0.27393,0.07375 l -0.53732,-1.675192 q 2.54966,-0.600541 4.24593,-0.600541 3.4452,0 3.4452,2.623414 0,1.232689 -0.82179,1.959659 -0.82179,0.716434 -2.4127,0.906079 0.95876,0.811256 1.92805,1.338046 0.97983,0.516255 1.98073,0.874472 l -1.15893,1.548762 q -0.5584,-0.20018 -1.16948,-0.558397 -0.61108,-0.358217 -1.21162,-0.790185 -0.60054,-0.431968 -1.1484,-0.874471 -0.53732,-0.442504 -0.95876,-0.821793 -0.0105,0.72697 -0.0211,1.475012 0,0.737506 0,1.527691 l -0.0632,0.06321 q -0.40036,0 -0.86394,0 -0.45304,0.01054 -0.82179,0.04214 z m 3.27663,-7.57524 q -0.295,0 -0.61107,0.03161 -0.31608,0.02107 -0.63215,0.06321 -0.0421,0.590005 -0.0737,1.169474 -0.0316,0.568933 -0.0527,1.137867 0.46357,-0.01054 1.0009,-0.05268 0.54786,-0.05268 1.03251,-0.189645 0.48465,-0.147501 0.79018,-0.421432 0.31608,-0.273931 0.31608,-0.72697 0,-0.52679 -0.43197,-0.769113 -0.43197,-0.242324 -1.33805,-0.242324 z m 5.33112,7.617384 q 0,-1.643585 0.0422,-2.96056 0.0527,-1.327511 0.12643,-2.412698 0.0843,-1.095724 0.17911,-2.03341 0.10535,-0.948222 0.20018,-1.812157 l 1.81215,0.07375 q -0.0421,0.32661 -0.0948,0.705899 0.35822,0.484647 0.77965,1.106259 0.43197,0.621612 0.87447,1.316975 0.45304,0.684827 0.88501,1.38019 0.43197,0.684827 0.82179,1.316975 0.38983,0.621612 0.68483,1.116794 0.0737,-0.72697 0.0737,-2.043945 0,-0.674291 -0.0211,-1.390725 -0.0211,-0.716435 -0.0527,-1.369654 -0.0316,-0.663756 -0.0843,-1.18001 -0.0527,-0.52679 -0.11589,-0.821792 l 1.98073,-0.242324 q 0.0211,0.516254 0.0211,1.359118 0.0105,0.832329 0.0105,1.770015 0,0.832328 -0.0105,1.675192 -0.0105,0.832328 -0.0421,1.538227 -0.0316,0.705898 -0.0948,1.169474 -0.1159,0.906078 -0.46358,1.338046 -0.34768,0.431968 -0.97983,0.431968 -0.51625,0 -0.94822,-0.358217 -0.42143,-0.358217 -0.91662,-1.18001 -0.33714,-0.568933 -0.79018,-1.306439 -0.4425,-0.748042 -0.92715,-1.527691 -0.47411,-0.779649 -0.91662,-1.485548 -0.0843,1.232689 -0.12643,2.465377 -0.0421,1.222153 -0.0421,2.212518 0,0.316074 0,0.590005 0,0.284467 0.0105,0.52679 z m 9.44009,-2.5602 -0.0316,-1.496083 q 0.42144,-0.04214 1.05358,-0.06321 0.63215,-0.02107 1.27484,-0.02107 0.45303,0 0.8534,0.01054 0.41089,0.01054 0.70589,0.03161 l -0.0211,1.475012 q -0.26339,0 -0.56893,0 -0.30554,-0.01054 -0.64268,-0.01054 -0.6743,0 -1.36966,0.02107 -0.69536,0.01054 -1.25376,0.05268 z m 9.03972,2.63395 q -1.28537,0 -2.23359,-0.568933 -0.94822,-0.558397 -1.46448,-1.58037 -0.51625,-1.021973 -0.51625,-2.412698 0,-0.52679 0.12643,-1.169474 0.13696,-0.65322 0.43197,-1.295903 0.295,-0.65322 0.79018,-1.190546 0.49518,-0.537326 1.21162,-0.863935 0.71643,-0.337146 1.68573,-0.337146 0.83232,0 1.45394,0.210716 0.62161,0.20018 1.07465,0.516254 0.45304,0.305538 0.74804,0.642684 0.30554,0.337146 0.48465,0.621612 0.17911,0.273931 0.26339,0.400361 l -1.52769,1.169473 q -0.23179,-0.431967 -0.54786,-0.842864 -0.31607,-0.421432 -0.77965,-0.695362 -0.46357,-0.273931 -1.1484,-0.273931 -0.7059,0 -1.16948,0.316074 -0.46357,0.316074 -0.7375,0.800721 -0.2634,0.484646 -0.36875,1.032508 -0.10536,0.537326 -0.10536,1.000901 0,0.495183 0.10536,0.979829 0.10535,0.484647 0.35821,0.885008 0.2634,0.40036 0.69537,0.642683 0.4425,0.231788 1.10625,0.231788 0.73751,0 1.20109,-0.263395 0.47411,-0.263395 0.79018,-0.737506 0.31607,-0.484647 0.59001,-1.127331 l 1.72787,0.77965 q -0.46358,0.958757 -1.04305,1.664656 -0.57947,0.705899 -1.35912,1.085187 -0.77965,0.379289 -1.84376,0.379289 z"
       id="text3783"
       aria-label="SupersatRN-C" /></g><script
     id="mesh_polyfill"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script></svg>
